// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QlW_BandoanOnline.Repository;

#nullable disable

namespace QlW_BandoanOnline.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("HoTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("DanhMuc", b =>
                {
                    b.Property<int>("MaDanhMuc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDanhMuc"));

                    b.Property<int?>("CuaHangId")
                        .HasColumnType("int");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MoTa")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TenDanhMuc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ThuTuHienThi")
                        .HasColumnType("int");

                    b.HasKey("MaDanhMuc");

                    b.HasIndex("CuaHangId");

                    b.ToTable("DanhMuc");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("QlW_BandoanOnline.Models.ChiTietDonHang", b =>
                {
                    b.Property<int>("MaChiTiet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaChiTiet"));

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaDonHang")
                        .HasColumnType("int");

                    b.Property<int?>("MaSanPham")
                        .HasColumnType("int");

                    b.Property<int?>("SanPhamMaSanPham")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenSanPham")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TuyChonThem")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaChiTiet");

                    b.HasIndex("MaDonHang");

                    b.HasIndex("MaSanPham");

                    b.HasIndex("SanPhamMaSanPham");

                    b.ToTable("ChiTietDonHang");
                });

            modelBuilder.Entity("QlW_BandoanOnline.Models.ChiTietTuyChon", b =>
                {
                    b.Property<int>("MaChiTietTuyChon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaChiTietTuyChon"));

                    b.Property<decimal>("GiaThem")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MaTuyChon")
                        .HasColumnType("int");

                    b.Property<string>("TenChiTiet")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaChiTietTuyChon");

                    b.HasIndex("MaTuyChon");

                    b.ToTable("ChiTietTuyChon");
                });

            modelBuilder.Entity("QlW_BandoanOnline.Models.CuaHang", b =>
                {
                    b.Property<int>("CuaHangId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CuaHangId"));

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("GioDongCua")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("GioMoCua")
                        .HasColumnType("time");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenCuaHang")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CuaHangId");

                    b.ToTable("CuaHang");
                });

            modelBuilder.Entity("QlW_BandoanOnline.Models.DanhGiaDonHang", b =>
                {
                    b.Property<int>("MaDanhGia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDanhGia"));

                    b.Property<int>("Diem")
                        .HasColumnType("int");

                    b.Property<string>("KhachHangUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("MaDonHang")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayDanhGia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayPhanHoi")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhanHoi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MaDanhGia");

                    b.HasIndex("KhachHangUserId");

                    b.HasIndex("MaDonHang");

                    b.HasIndex("UserId");

                    b.ToTable("DanhGiaDonHang");
                });

            modelBuilder.Entity("QlW_BandoanOnline.Models.DonHang", b =>
                {
                    b.Property<int>("MaDonHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDonHang"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("DaThanhToan")
                        .HasColumnType("bit");

                    b.Property<string>("DiaChiGiaoHang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GhiChuDiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GiamGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("HoTenKhach")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KhachHangUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaDonHangPublic")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("MaGioHang")
                        .HasColumnType("int");

                    b.Property<int?>("MaKhuyenMai")
                        .HasColumnType("int");

                    b.Property<string>("NhanVienGiaoHangId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NhanVienId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NhanVienTiepNhanId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PhuongThucThanhToan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ThoiGianCapNhatTrangThai")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianDatHang")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ThoiGianGiaoDuKien")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ThoiGianThanhToan")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TienGiaoHang")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TongTienSauGiamGiaDB")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TongTienTruocGiamGiaDB")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MaDonHang");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("KhachHangUserId");

                    b.HasIndex("MaDonHangPublic")
                        .IsUnique()
                        .HasFilter("[MaDonHangPublic] IS NOT NULL");

                    b.HasIndex("MaGioHang");

                    b.HasIndex("MaKhuyenMai");

                    b.HasIndex("NhanVienGiaoHangId");

                    b.HasIndex("NhanVienId");

                    b.HasIndex("NhanVienTiepNhanId");

                    b.HasIndex("ThoiGianDatHang");

                    b.HasIndex("UserId", "MaKhuyenMai")
                        .HasFilter("[MaKhuyenMai] IS NOT NULL");

                    b.ToTable("DonHang");
                });

            modelBuilder.Entity("QlW_BandoanOnline.Models.DonHangHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaDonHang")
                        .HasColumnType("int");

                    b.Property<string>("NhanVienId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ThoiGianCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaDonHang");

                    b.HasIndex("NhanVienId");

                    b.ToTable("DonHangHistory");
                });

            modelBuilder.Entity("QlW_BandoanOnline.Models.GioHang", b =>
                {
                    b.Property<int>("MaGioHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaGioHang"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MaGioHang");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("UserId");

                    b.ToTable("GioHang");
                });

            modelBuilder.Entity("QlW_BandoanOnline.Models.GioHangItem", b =>
                {
                    b.Property<int>("MaGioHangItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaGioHangItem"));

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GiaBan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MaGioHang")
                        .HasColumnType("int");

                    b.Property<int>("MaSanPham")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenSanPham")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TuyChon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaGioHangItem");

                    b.HasIndex("MaGioHang");

                    b.HasIndex("MaSanPham");

                    b.ToTable("GioHangItem");
                });

            modelBuilder.Entity("QlW_BandoanOnline.Models.KhachHang", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("UserId");

                    b.ToTable("KhachHang");
                });

            modelBuilder.Entity("QlW_BandoanOnline.Models.KhuyenMai", b =>
                {
                    b.Property<int>("MaKhuyenMai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaKhuyenMai"));

                    b.Property<int>("DaSuDung")
                        .HasColumnType("int");

                    b.Property<decimal>("GiaTriGiam")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("LaPhanTram")
                        .HasColumnType("bit");

                    b.Property<int?>("MaDanhMuc")
                        .HasColumnType("int");

                    b.Property<string>("MaKhuyenMaiCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaSanPham")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenKhuyenMai")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaKhuyenMai");

                    b.HasIndex("MaDanhMuc");

                    b.HasIndex("MaSanPham");

                    b.ToTable("KhuyenMai");
                });

            modelBuilder.Entity("QlW_BandoanOnline.Models.MucTieuDoanhThu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("NewCustomerTarget")
                        .HasColumnType("int");

                    b.Property<int>("OrderTarget")
                        .HasColumnType("int");

                    b.Property<int>("PositiveReviewTarget")
                        .HasColumnType("int");

                    b.Property<decimal>("RevenueTarget")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("MucTieuDoanhThu");
                });

            modelBuilder.Entity("QlW_BandoanOnline.Models.NhanVien", b =>
                {
                    b.Property<string>("NhanVienId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CCCD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChucVu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CuaHangId")
                        .HasColumnType("int");

                    b.Property<bool>("DangLamViec")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaNhanVien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayBatDauLam")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NhanVienId");

                    b.HasIndex("CuaHangId");

                    b.ToTable("NhanVien");
                });

            modelBuilder.Entity("QlW_BandoanOnline.Models.SanPham", b =>
                {
                    b.Property<int>("MaSanPham")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaSanPham"));

                    b.Property<decimal>("GiaBan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("GiaGoc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBestSeller")
                        .HasColumnType("bit");

                    b.Property<int>("MaDanhMuc")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("TenSanPham")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ThoiGianChuanBi")
                        .HasColumnType("int");

                    b.HasKey("MaSanPham");

                    b.HasIndex("MaDanhMuc");

                    b.ToTable("SanPham");
                });

            modelBuilder.Entity("QlW_BandoanOnline.Models.TuyChonSanPham", b =>
                {
                    b.Property<int>("MaTuyChon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaTuyChon"));

                    b.Property<bool>("BatBuoc")
                        .HasColumnType("bit");

                    b.Property<int>("MaSanPham")
                        .HasColumnType("int");

                    b.Property<int>("SoLuongChonToiDa")
                        .HasColumnType("int");

                    b.Property<int>("SoLuongChonToiThieu")
                        .HasColumnType("int");

                    b.Property<string>("TenTuyChon")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaTuyChon");

                    b.HasIndex("MaSanPham");

                    b.ToTable("TuyChonSanPham");
                });

            modelBuilder.Entity("QlW_BandoanOnline.Models.VnPayTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaDonHang")
                        .HasColumnType("int");

                    b.Property<string>("MaGiaoDich")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PayDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResponseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecureHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TxnRef")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MaDonHang")
                        .IsUnique();

                    b.ToTable("VnPayTransaction");
                });

            modelBuilder.Entity("DanhMuc", b =>
                {
                    b.HasOne("QlW_BandoanOnline.Models.CuaHang", "CuaHang")
                        .WithMany("DanhMuc")
                        .HasForeignKey("CuaHangId");

                    b.Navigation("CuaHang");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QlW_BandoanOnline.Models.ChiTietDonHang", b =>
                {
                    b.HasOne("QlW_BandoanOnline.Models.DonHang", "DonHang")
                        .WithMany("ChiTietDonHang")
                        .HasForeignKey("MaDonHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QlW_BandoanOnline.Models.SanPham", "SanPham")
                        .WithMany()
                        .HasForeignKey("MaSanPham")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("QlW_BandoanOnline.Models.SanPham", null)
                        .WithMany("ChiTietDonHang")
                        .HasForeignKey("SanPhamMaSanPham");

                    b.Navigation("DonHang");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("QlW_BandoanOnline.Models.ChiTietTuyChon", b =>
                {
                    b.HasOne("QlW_BandoanOnline.Models.TuyChonSanPham", "TuyChonSanPham")
                        .WithMany("ChiTietTuyChon")
                        .HasForeignKey("MaTuyChon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TuyChonSanPham");
                });

            modelBuilder.Entity("QlW_BandoanOnline.Models.DanhGiaDonHang", b =>
                {
                    b.HasOne("QlW_BandoanOnline.Models.KhachHang", null)
                        .WithMany("DanhGia")
                        .HasForeignKey("KhachHangUserId");

                    b.HasOne("QlW_BandoanOnline.Models.DonHang", "DonHang")
                        .WithMany()
                        .HasForeignKey("MaDonHang")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("DonHang");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QlW_BandoanOnline.Models.DonHang", b =>
                {
                    b.HasOne("ApplicationUser", null)
                        .WithMany("DonHang")
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("QlW_BandoanOnline.Models.KhachHang", null)
                        .WithMany("DonHang")
                        .HasForeignKey("KhachHangUserId");

                    b.HasOne("QlW_BandoanOnline.Models.GioHang", "GioHang")
                        .WithMany()
                        .HasForeignKey("MaGioHang")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("QlW_BandoanOnline.Models.KhuyenMai", "KhuyenMai")
                        .WithMany("DonHang")
                        .HasForeignKey("MaKhuyenMai");

                    b.HasOne("QlW_BandoanOnline.Models.NhanVien", "NhanVienGiaoHang")
                        .WithMany("DonHangGiaoHang")
                        .HasForeignKey("NhanVienGiaoHangId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("QlW_BandoanOnline.Models.NhanVien", null)
                        .WithMany("DonHang")
                        .HasForeignKey("NhanVienId");

                    b.HasOne("QlW_BandoanOnline.Models.NhanVien", "NhanVienTiepNhan")
                        .WithMany("DonHangTiepNhan")
                        .HasForeignKey("NhanVienTiepNhanId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("GioHang");

                    b.Navigation("KhuyenMai");

                    b.Navigation("NhanVienGiaoHang");

                    b.Navigation("NhanVienTiepNhan");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QlW_BandoanOnline.Models.DonHangHistory", b =>
                {
                    b.HasOne("QlW_BandoanOnline.Models.DonHang", "DonHang")
                        .WithMany()
                        .HasForeignKey("MaDonHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QlW_BandoanOnline.Models.NhanVien", "NhanVien")
                        .WithMany()
                        .HasForeignKey("NhanVienId");

                    b.Navigation("DonHang");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("QlW_BandoanOnline.Models.GioHang", b =>
                {
                    b.HasOne("ApplicationUser", null)
                        .WithMany("GioHang")
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("QlW_BandoanOnline.Models.GioHangItem", b =>
                {
                    b.HasOne("QlW_BandoanOnline.Models.GioHang", "GioHang")
                        .WithMany("GioHangItem")
                        .HasForeignKey("MaGioHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QlW_BandoanOnline.Models.SanPham", "SanPham")
                        .WithMany("GioHangItem")
                        .HasForeignKey("MaSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GioHang");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("QlW_BandoanOnline.Models.KhachHang", b =>
                {
                    b.HasOne("ApplicationUser", "User")
                        .WithOne()
                        .HasForeignKey("QlW_BandoanOnline.Models.KhachHang", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("QlW_BandoanOnline.Models.KhuyenMai", b =>
                {
                    b.HasOne("DanhMuc", "DanhMuc")
                        .WithMany()
                        .HasForeignKey("MaDanhMuc");

                    b.HasOne("QlW_BandoanOnline.Models.SanPham", "SanPham")
                        .WithMany()
                        .HasForeignKey("MaSanPham");

                    b.Navigation("DanhMuc");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("QlW_BandoanOnline.Models.NhanVien", b =>
                {
                    b.HasOne("QlW_BandoanOnline.Models.CuaHang", "CuaHang")
                        .WithMany("NhanVien")
                        .HasForeignKey("CuaHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationUser", "User")
                        .WithOne("NhanVien")
                        .HasForeignKey("QlW_BandoanOnline.Models.NhanVien", "NhanVienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CuaHang");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QlW_BandoanOnline.Models.SanPham", b =>
                {
                    b.HasOne("DanhMuc", "DanhMuc")
                        .WithMany("SanPham")
                        .HasForeignKey("MaDanhMuc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DanhMuc");
                });

            modelBuilder.Entity("QlW_BandoanOnline.Models.TuyChonSanPham", b =>
                {
                    b.HasOne("QlW_BandoanOnline.Models.SanPham", "SanPham")
                        .WithMany("TuyChon")
                        .HasForeignKey("MaSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("QlW_BandoanOnline.Models.VnPayTransaction", b =>
                {
                    b.HasOne("QlW_BandoanOnline.Models.DonHang", "DonHang")
                        .WithOne("VnPayTransaction")
                        .HasForeignKey("QlW_BandoanOnline.Models.VnPayTransaction", "MaDonHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonHang");
                });

            modelBuilder.Entity("ApplicationUser", b =>
                {
                    b.Navigation("DonHang");

                    b.Navigation("GioHang");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("DanhMuc", b =>
                {
                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("QlW_BandoanOnline.Models.CuaHang", b =>
                {
                    b.Navigation("DanhMuc");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("QlW_BandoanOnline.Models.DonHang", b =>
                {
                    b.Navigation("ChiTietDonHang");

                    b.Navigation("VnPayTransaction");
                });

            modelBuilder.Entity("QlW_BandoanOnline.Models.GioHang", b =>
                {
                    b.Navigation("GioHangItem");
                });

            modelBuilder.Entity("QlW_BandoanOnline.Models.KhachHang", b =>
                {
                    b.Navigation("DanhGia");

                    b.Navigation("DonHang");
                });

            modelBuilder.Entity("QlW_BandoanOnline.Models.KhuyenMai", b =>
                {
                    b.Navigation("DonHang");
                });

            modelBuilder.Entity("QlW_BandoanOnline.Models.NhanVien", b =>
                {
                    b.Navigation("DonHang");

                    b.Navigation("DonHangGiaoHang");

                    b.Navigation("DonHangTiepNhan");
                });

            modelBuilder.Entity("QlW_BandoanOnline.Models.SanPham", b =>
                {
                    b.Navigation("ChiTietDonHang");

                    b.Navigation("GioHangItem");

                    b.Navigation("TuyChon");
                });

            modelBuilder.Entity("QlW_BandoanOnline.Models.TuyChonSanPham", b =>
                {
                    b.Navigation("ChiTietTuyChon");
                });
#pragma warning restore 612, 618
        }
    }
}
